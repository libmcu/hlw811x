/*
 * SPDX-FileCopyrightText: 2024 Kyunghwan Kwon <k@libmcu.org>
 *
 * SPDX-License-Identifier: MIT
 */

#ifndef HLW811X_REGS_H
#define HLW811X_REGS_H

#if defined(__cplusplus)
extern "C" {
#endif

typedef enum {
	/* Calibration Parameters and Metering Control Registers */
	HLW811X_REG_SYS_CTRL				= 0x00u,
	HLW811X_REG_METER_CTRL				= 0x01u,
	HLW811X_REG_PULSE_FREQ				= 0x02u,
	HLW811X_REG_PASTART				= 0x03u,
	HLW811X_REG_PBSTART				= 0x04u,
	HLW811X_REG_POWER_GAIN_A			= 0x05u,
	HLW811X_REG_POWER_GAIN_B			= 0x06u,
	HLW811X_REG_PHASE_A				= 0x07u,
	HLW811X_REG_PHASE_B				= 0x08u,
	HLW811X_REG_ACTIVE_POWER_OFFSET_A		= 0x0Au,
	HLW811X_REG_ACTIVE_POWER_OFFSET_B		= 0x0Bu,
	HLW811X_REG_RMS_OFFSET_IA			= 0x0Eu,
	HLW811X_REG_RMS_OFFSET_IB			= 0x0Fu,
	HLW811X_REG_GAIN_IB				= 0x10u,
	HLW811X_REG_APPARENT_POWER_GAIN			= 0x11u,
	HLW811X_REG_VISUAL_POWER_OFFSET			= 0x12u,
	HLW811X_REG_METER_CTRL_2			= 0x13u,
	HLW811X_REG_DC_OFFSET_IA			= 0x14u,
	HLW811X_REG_DC_OFFSET_IB			= 0x15u,
	HLW811X_REG_DC_OFFSET_IC			= 0x16u,
	HLW811X_REG_PERIOD_VOL_SAG			= 0x17u,
	HLW811X_REG_THRESHOLD_VOL_SAG			= 0x18u,
	HLW811X_REG_THRESHOLD_VOL			= 0x19u,
	HLW811X_REG_THRESHOLD_IA			= 0x1Au,
	HLW811X_REG_THRESHOLD_IB			= 0x1Bu,
	HLW811X_REG_THRESHOLD_ACTIVE_POWER_OVERLOAD	= 0x1Cu,
	HLW811X_REG_INT					= 0x1Du,
	/* Meter Parameters and Status Registers */
	HLW811X_REG_PFCNTPA				= 0x20u,
	HLW811X_REG_PFCNTPB				= 0x21u,
	HLW811X_REG_ANGLE				= 0x22u,
	HLW811X_REG_FREQUENCY_L_LINE			= 0x23u,
	HLW811X_REG_RMS_IA				= 0x24u,
	HLW811X_REG_RMS_IB				= 0x25u,
	HLW811X_REG_RMS_U				= 0x26u,
	HLW811X_REG_POWER_FACTOR			= 0x27u,
	HLW811X_REG_ENERGY_PA				= 0x28u,
	HLW811X_REG_ENERGY_PB				= 0x29u,
	HLW811X_REG_POWER_PA				= 0x2Cu,
	HLW811X_REG_POWER_PB				= 0x2Du,
	HLW811X_REG_POWER_S				= 0x2Eu,
	HLW811X_REG_METER_STATUS			= 0x2Fu,
	HLW811X_REG_PEAK_IA				= 0x30u,
	HLW811X_REG_PEAK_IB				= 0x31u,
	HLW811X_REG_PEAK_U				= 0x32u,
	HLW811X_REG_INSTAN_IA				= 0x33u,
	HLW811X_REG_INSTAN_IB				= 0x34u,
	HLW811X_REG_INSTAN_U				= 0x35u,
	HLW811X_REG_WAVE_IA				= 0x36u,
	HLW811X_REG_WAVE_IB				= 0x37u,
	HLW811X_REG_WAVE_U				= 0x38u,
	HLW811X_REG_INSTAN_P				= 0x3Cu,
	HLW811X_REG_INSTAN_S				= 0x3Du,
	/* Interrupt Registers */
	HLW811X_REG_IE					= 0x40u,
	HLW811X_REG_IF					= 0x41u,
	HLW811X_REG_RIF					= 0x42u,
	/* System Status Registers */
	HLW811X_REG_SYS_STATUS				= 0x43u,
	HLW811X_REG_SPI_LATEST_DATA_R			= 0x44u,
	HLW811X_REG_SPI_LATEST_DATA_W			= 0x45u,
	HLW811X_REG_COEFF_CHKSUM			= 0x6Fu,
	HLW811X_REG_RMS_IA_COEFF			= 0x70u,
	HLW811X_REG_RMS_IB_COEF				= 0x71u,
	HLW811X_REG_RMS_U_COEF				= 0x72u,
	HLW811X_REG_POWER_A_COEF			= 0x73u,
	HLW811X_REG_POWER_B_COEF			= 0x74u,
	HLW811X_REG_POWER_S_COEF			= 0x75u,
	HLW811X_REG_ENERGY_A_COEF			= 0x76u,
	HLW811X_REG_ENERGY_B_COEF			= 0x77u,
} hlw811x_reg_addr_t;

#if defined(__cplusplus)
}
#endif

#endif /* HLW811X_REGS_H */
